{
  "name": "yocto-logger",
  "description": "Ready to use logger utility based on winston.",
  "version": "1.1.1",
  "scripts": {},
  "author": {
    "name": "Yocto SAS",
    "email": "technique@yocto.re",
    "url": "http://www.yocto.re"
  },
  "contributors": [
    {
      "name": "ROBERT Mathieu",
      "email": "mathieu@yocto.re"
    }
  ],
  "maintainers": [
    {
      "name": "ROBERT Mathieu",
      "email": "mathieu@yocto.re"
    }
  ],
  "main": "dist/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/yocto-node-modules/yocto-logger.git"
  },
  "bugs": {
    "url": "https://gitlab.com/yocto-node-modules/yocto-logger/issues"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=4.2.1"
  },
  "files": [
    "dist/index.js",
    "README.md",
    "LICENSE-2.0.txt",
    "CHANGELOG.md"
  ],
  "keywords": [
    "logging",
    "winston",
    "sysadmin",
    "tool",
    "transport",
    "log"
  ],
  "dependencies": {
    "chalk": "^1.1.1",
    "lodash": "^3.10.1",
    "moment": "^2.10.6",
    "promise": "^7.0.4",
    "string-format": "^0.5.0",
    "uuid": "^2.0.1",
    "winston": "^2.0.1"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-copy": "^0.8.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-contrib-uglify": "^0.10.0",
    "grunt-mocha-cli": "^2.0.0",
    "yocto-hint": "^1.2.6"
  },
  "gitHead": "6974e7d71ea6c2c80b7861bbc5cc3ae8d09beaac",
  "readme": "## Overview\n\nThis module is a part of yocto node modules for NodeJS. \n\nPlease see https://www.npmjs.com/~yocto for complete list of available module (completed day after day).\n\nThis module manage your own logger request on your node app.\n\nThis module his based on winston package : https://github.com/flatiron/winston\n\n**IMPORTANT : This module is not a complete reimplantation of winston** we only use winston for the core process.\n\n## Motivation\n\nIn all of our project we use a logger library like winston. But all the time we need to\nconfigure again and again the same library. \n\nThat why we decided to create yocto-Logger.\n\nThis tool is designed to be a very very simple and pre-configured and ready to use tool\nbased on the universal logging library winston.\n\n## Configuration : console transport\n\nBy default a console is configured with these options : \n(Cf. winston & momentjs documentation for more details)\n\n```javascript\n{\n  level             : 'debug',\n  handleExceptions  : false,\n  json              : false,\n  showLevel         : true,\n  silent            : false,\n  timestamp         : function () {\n    // return special timestamp format\n    return moment().format('YYYY/MM/DD HH:mm:ss');\n  }\n};\n```\n## Configuration : daily rotate transport\n\nBy default a daily rotate transport is configured with these options : \n(Cf. winston & momentjs documentation for more details)\n\n```javascript\n{\n  name              : 'default-daily-rotate-transport',\n  level             : 'verbose',\n  dirname           : './',\n  filename          : uuid.v4(), // default name if name is not given\n  handleExceptions  : true,\n  json              : false,\n  maxsize           : 5242880,\n  maxFiles          : 5,\n  colorize          : true,\n  datePattern       : '-yyyy-MM-dd.log',\n  timestamp         : function () {\n    // return special timestamp format\n    return moment().format('YYYY/MM/DD HH:mm:ss');\n  }\n};\n```\n\n## Logging Method\n\n Avaiblable methods are : \n \n- error (for error message)\n- warning (for warning message)\n- info (for information message)\n- debug (for debug message)\n- verbose (for normal message)\n\n```javascript\nvar logger = require('yocto-logger');\n// error message\nlogger.error('Hello world');\n// warning message\nlogger.warning('Hello world');\n// info message\nlogger.info('Hello world');\n// debug message\nlogger.debug('Hello world');\n// verbose message\nlogger.verbose('Hello world');\n// banner message\nlogger.banner('Hello world');\n```\n\n## Banner Method \n\nTo display on console.log a more significant message we implemened a banner method.\nYou can customize style (color and background color) of message but is not save on available transports.\n\n```javascript\nvar logger = require('yocto-logger');\n// banner usage\nlogger.banner(\"Banner customized\",{ color: \"red\" , bgColor: \"white\" });\n```\n\n## Transport : Adding a new daily rotate transport\n\n```javascript\nvar logger = require('yocto-logger');\n\n// add new daily rotate transport with default config\nlogger.addDailyRotateTransport();\n\n// add new daily rotate transport and process new action when async is finish\nlogger.addDailyRotateTransport().then(function(success) {\n    // your process here\n}, function(error) {\n    // error process here\n});\n\n// add new daily transport on specific path + changing filename and more options\nlogger.addDailyRotateTransport('/your-new-path-here', 'your-file-name-here', {});\n```\n\n## Change level manually\n\nYou can change current logger level manually by method `setLogLevel(name)`.\n\nProperty `name` of this function must be one of these values :\n\n \n- error (for error message)\n- warning (for warning message)\n- info (for information message)\n- debug (for debug message)\n- verbose (for normal message)\n\nFor example if we need to set current logger instance to `error` level : \n\n```javascript\nvar logger = require('yocto-logger');\n\nlogger.setLogLevel('error);\n// YOUR Extra code here\n```\n\n## Utility Methods\n\nFor a better usage we can interact with all transport by utility methods.\nMethods available are : \n\n- more  :to change the log level to a higher level\n- less  : to change the log level to a less level\n- enableConsole : to enable console transport if is disable\n- disableConsole : to disable console transport if is enable\n- enableExceptions : to enable catch exception on logger if is disable\n- disableExceptions : to disable catch exception on logger if is enable\n\n```javascript\nvar logger = require('yocto-logger');\n\n// Less & more - initial level is debug\nlogger.more(); // level change to verbose\nlogger.less(); // level change to debug\n\n// Others method\nlogger.enableConsole();\nlogger.disableConsole();\nlogger.enableExceptions();\nlogger.disableExceptions();\n```\n\n\n\n\n",
  "readmeFilename": "README.md",
  "homepage": "https://gitlab.com/yocto-node-modules/yocto-logger#README",
  "_id": "yocto-logger@1.1.1",
  "_shasum": "3d6f9a05876bda46038307e6cf6641bf74beba26",
  "_from": "git+ssh://git@gitlab.com/yocto-node-modules/yocto-logger.git",
  "_resolved": "git+ssh://git@gitlab.com/yocto-node-modules/yocto-logger.git#6974e7d71ea6c2c80b7861bbc5cc3ae8d09beaac"
}
