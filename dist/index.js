/* yocto-auth - Yocto auth is an express middleware that permit an user to login it on an api, the module is based on passportJS - V2.0.0 */

"use strict";var passport=require("passport"),FacebookStrategy=require("passport-facebook").Strategy,GoogleStrategy=require("passport-google-oauth").OAuth2Strategy,TwitterStrategy=require("passport-twitter").Strategy,_=require("lodash"),qs=require("qs"),logger=require("yocto-logger"),Strategy=require("passport-local").Strategy,signature=require("cookie-signature"),LdapStrategy=require("passport-ldapauth"),url=require("url"),base64=require("base-64"),utf8=require("utf8"),utils=require("yocto-utils");function Auth(e){this.app={},this.dataCommon={},this.authmodel={},this.configs={},this.configs.standard=[],this.configs.ad=[],this.logger=e||logger}function encode(e){var s=utf8.encode(e);return base64.encode(s)}function decode(e){var s=base64.decode(e);return utf8.decode(s)}function setUrlSession(e){this.logger.debug("[ yocto-auth.setUrlSession ] - headers.referer value is : ",e.headers.referer);var s=url.parse(e.headers.referer);e.session.ecrm={urlRedirectSuccess:s.protocol+"//"+s.host+"/auth",urlRedirectFail:s.protocol+"//"+s.host+"/auth"},this.logger.debug("[ yocto-auth.setUrlSession ] - url was set in session, req.session = ",utils.obj.inspect(e.session))}function bindStrategy(e,s){this.app.get(e.urls.connect,this.dataCommon.session,function(e,s,r){setUrlSession.apply(this,[e]),e.session.join={},_.isUndefined(e.params.id)||_.isEmpty(e.params.id)||_.isNull(e.params.id)||(e.session.join={id:e.params.id}),r()}.bind(this),passport.authenticate(s,"google"===s?{scope:e.scope}:{})),this.app.get(e.urls.callback,this.dataCommon.session,passport.authenticate(s,{failureRedirect:this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":true,"provider":"'+s+'"}'),successRedirect:this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":false,"provider":"'+s+'"}')}))}Auth.prototype.init=function(e,s,r){return!(_.isUndefined(e)||_.isNull(e)||_.isEmpty(e)||_.isUndefined(s)||_.isNull(s)||_.isEmpty(s)||_.isUndefined(r)||_.isNull(r)||_.isEmpty(r))&&(this.app=e,this.authmodel=s,this.dataCommon=r,e.use(passport.initialize()),passport.serializeUser(function(e,s){s(null,e)}),passport.deserializeUser(function(e,s){s(null,e)}),this.setEndPoint(),!0)},Auth.prototype.setEndPoint=function(){var a=function(e,s,r,t){this.logger.error('[ yocto-auth.endPoint ] error authentication for provider "'+s+'", more details : ',utils.obj.inspect(e)),t.redirect(r.session.ecrm.urlRedirectFail+"/fail?value="+encode('{"status":"error","code":"400101","message":"User not found for the given credentials"}'))}.bind(this);this.app.get(this.dataCommon.internalUrlRedirect,this.dataCommon.session,function(s,r){if(_.isUndefined(s.session.ecrm)||_.isUndefined(s.session.ecrm.urlRedirectFail)||_.isUndefined(s.session.ecrm.urlRedirectFail)){this.logger.error("[ yocto-auth.endPoint ] - an error occured when reading session, object ecrm was not defined, it seems that the session was reinitialized"),this.logger.debug("[ yocto-auth.endPoint ] - session that was in error : "+utils.obj.inspect(s.session));var e=url.parse(s.headers.referer);return r.redirect(e.protocol+"//"+e.host+"/auth/fail?value="+encode('{"status":"error","code":"400102","message":"An internal error occured, please retest to connect"}'))}var t={};try{if(t=qs.parse(_.get(s,"_parsedUrl.query")),(t=JSON.parse(decode(t.value))).error)throw{details:t.error,provider:t.provider};var i=utils.obj.camelizeKeys(s.session.passport.user),o={user:s.session.passport.user,provider:t.provider,paramToFind:{auth_type:t.provider,"social_profile.provider_id":i.providerId}};if("ad"===t.provider?o.paramToFind={auth_type:"active-directory","active_directory_profile.dn":s.session.passport.user.dn}:"standard"===t.provider&&(o.paramToFind={password:s.session.passport.user.password,$or:[{"login.email":s.session.passport.user.username},{"login.phone":s.session.passport.user.username}]}),_.isUndefined(s.session.join)||_.isNull(s.session.join)||_.isEmpty(s.session.join)){var n=this.configs[t.provider];_.isArray(n)&&(n=n[t.index]),this.authmodel[n.db.method](o).then(function(e){if(_.isEmpty(e))throw"User not found for this credentials.";s.session.passport.user=e,r.redirect(s.session.ecrm.urlRedirectSuccess+"/success?"+qs.stringify({session:"s:"+signature.sign(s.sessionID,this.dataCommon.secretCookieKey)}))}.bind(this)).catch(function(e){a(e,t.provider,s,r)})}else this.authmodel.joinAccount(s.session.join.id,utils.obj.underscoreKeys({authType:t.provider,socialProfile:s.session.passport.user})).then(function(){this.logger.info('[ yocto-auth.endPoint ] - Document Auth created for account : "',s.session.join.id,'" for provider : "',t.provider,'"'),delete s.session.join,r.redirect(s.session.ecrm.urlRedirectSuccess+"/join/success?value="+encode('{"provider":"'+t.provider+'"}'))}.bind(this)).catch(function(e){this.logger.error('[ yocto-auth.endPoint ] - error cannot create auth document for this social network "',e),s.session.ecrm.urlRedirectFail+="/join/fail?value="+encode('{"provider":"'+t.provider+'"}'),delete s.session.join,a(e,t.provider,s,r)}.bind(this))}catch(e){a(e.details,e.provider,s,r)}}.bind(this))},Auth.prototype.addTwitter=function(e){this.configs.twitter=e,passport.use(new TwitterStrategy({consumerKey:e.identifier,consumerSecret:e.secret,callbackURL:this.dataCommon.host+e.urls.callback},function(e,s,r,t){t(null,utils.obj.underscoreKeys({providerId:r.id,displayName:r.displayName,profilePicture:_.isUndefined(_.first(r.photos))?"":_.first(r.photos).value,accessToken:e,secretToken:s}))})),bindStrategy.apply(this,[e,"twitter"])},Auth.prototype.addStandard=function(e){this.configs.standard.push(e);var r=this.configs.standard.length-1;passport.use(new Strategy(function(e,s,r){r(null,{username:e,password:s})})),this.app.post(e.urls.connect,this.dataCommon.session,passport.authenticate("local",{failureRedirect:this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":true,"provider":"standard","index":'+r+"}")}),function(e,s){if(this.logger.debug("[ yocto-auth.addStandard.cb ] - value of req.session.passport.user = "+utils.obj.inspect(e.session.passport.user)),e.session.passport.user.error)return this.logger.error("[ yocto-auth.addStandard.cb ] - error when finding session,  more details : "+utils.obj.inspect(e.session.passport.user.error)),s.redirect(this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":true,"provider":"standard","index":'+r+"}"));setUrlSession.apply(this,[e]),s.redirect(this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":false,"provider":"standard","index":'+r+"}"))}.bind(this))},Auth.prototype.buildOptionnalConfigFacebook=function(s){var r={};return _.each(["profileURL","enableProof"],function(e){_.has(s,e)&&_.set(r,e,_.get(s,e))}),r},Auth.prototype.addFacebook=function(e){this.configs.facebook=e,passport.use(new FacebookStrategy(_.merge({clientID:e.identifier,clientSecret:e.secret,callbackURL:this.dataCommon.host+e.urls.callback,profileFields:e.fields},this.buildOptionnalConfigFacebook(e)),function(e,s,r,t){t(null,utils.obj.underscoreKeys({providerId:r.id,displayName:r.displayName,lastname:r.name.familyName,firstname:r.name.givenName,sex:r.gender,profilePicture:_.isUndefined(_.first(r.photos))?"":_.first(r.photos).value,accessToken:e}))})),bindStrategy.apply(this,[e,"facebook"])},Auth.prototype.addGoogle=function(e){this.configs.google=e,passport.use(new GoogleStrategy({clientID:e.identifier,clientSecret:e.secret,callbackURL:this.dataCommon.host+e.urls.callback},function(e,s,r,t){t(null,utils.obj.underscoreKeys({providerId:r.id,displayName:r.displayName,lastname:r.name.familyName,firstname:r.name.givenName,sex:r.gender,profilePicture:_.isUndefined(_.first(r.photos))?"":_.first(r.photos).value,accessToken:e}))})),bindStrategy.apply(this,[e,"google"])},Auth.prototype.addActiveDirectory=function(e){this.configs.ad.push(e);var o=this.configs.ad.length-1;passport.use(new LdapStrategy({server:e.server,usernameField:"username",passwordField:"display_password"},function(e,s){s(null,e)})),this.app.post(e.urls.connect,this.dataCommon.session,function(t,i,e){setUrlSession.apply(this,[t]),passport.authenticate("ldapauth",function(e,s){var r=JSON.stringify({error:!_.isNull(e),provider:"ad",index:o});t.session.passport={user:_.isNull(s)?{}:s},i.redirect(this.dataCommon.internalUrlRedirect+"?value="+encode(r))}.bind(this))(t,i,e)}.bind(this))},module.exports=function(e){return new Auth(e)};