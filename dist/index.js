/* yocto-auth - Yocto auth is an express middleware that permit an user to login it on an api, the module is based on passportJS - V1.0.2 */
function Auth(a){this.app={},this.dataCommon={},this.authmodel={},this.configs={},this.configs.standard=[],this.configs.ad=[],this.logger=a||logger}function bindStrategy(a,b){console.log("provide : ",b),this.app.get(a.urls.connect,this.dataCommon.session,function(a,b,c){setUrlSession(a),_.isUndefined(a.params.id)||_.isEmpty(a.params.id)||_.isNull(a.params.id)||(a.session.join={id:a.params.id}),c()},passport.authenticate(b,"google"===b?{scope:a.scope}:{})),this.app.get(a.urls.callback,this.dataCommon.session,passport.authenticate(b,{failureRedirect:this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":true,"provider":"'+b+'"}'),successRedirect:this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":false,"provider":"'+b+'"}')}))}function encode(a){var b=utf8.encode(a);return base64.encode(b)}function decode(a){var b=base64.decode(a);return utf8.decode(b)}function setUrlSession(a){var b=url.parse(a.headers.referer);a.session.ecrm={urlRedirectSuccess:b.protocol+"//"+b.host+"/auth",urlRedirectFail:b.protocol+"//"+b.host+"/auth"}}var passport=require("passport"),FacebookStrategy=require("passport-facebook").Strategy,GoogleStrategy=require("passport-google-oauth").OAuth2Strategy,TwitterStrategy=require("passport-twitter").Strategy,_=require("lodash"),qs=require("qs"),logger=require("yocto-logger"),Strategy=require("passport-local").Strategy,signature=require("cookie-signature"),LdapStrategy=require("passport-ldapauth"),url=require("url"),base64=require("base-64"),utf8=require("utf8"),utils=require("yocto-utils");Auth.prototype.init=function(a,b,c){return _.isUndefined(a)||_.isNull(a)||_.isEmpty(a)||_.isUndefined(b)||_.isNull(b)||_.isEmpty(b)||_.isUndefined(c)||_.isNull(c)||_.isEmpty(c)?!1:(this.app=a,this.authmodel=b,this.dataCommon=c,a.use(passport.initialize()),passport.serializeUser(function(a,b){b(null,a)}),passport.deserializeUser(function(a,b){b(null,a)}),this.setEndPoint(),!0)},Auth.prototype.setEndPoint=function(){this.app.get(this.dataCommon.internalUrlRedirect,this.dataCommon.session,function(a,b){if(_.isUndefined(a.session.ecrm)||_.isUndefined(a.session.ecrm.urlRedirectFail)||_.isUndefined(a.session.ecrm.urlRedirectFail)){this.logger.info("[ yocto-auth.endPoint ] - an error occured when reading session, object ecrm was not defined, it seems that the session was reinitialized");var c=url.parse(a.headers.referer);return b.redirect(c.protocol+"//"+c.host+"/auth/fail?value="+encode('{"status":"error","code":"400102","message":"An internal error occured, please retest to connect"}'))}var d={};try{if(d=qs.parse(a._parsedUrl.query),d=JSON.parse(decode(d.value)),d.error)throw{details:d.error,provider:d.provider};var e=utils.obj.camelizeKeys(a.session.passport.user),f={user:a.session.passport.user,provider:d.provider,paramToFind:{auth_type:d.provider,"social_profile.provider_id":e.providerId}};if("ad"===d.provider?f.paramToFind={auth_type:"active-directory","active_directory_profile.dn":a.session.passport.user.dn}:"standard"===d.provider&&(f.paramToFind={password:a.session.passport.user.password,$or:[{"login.email":a.session.passport.user.username},{"login.phone":a.session.passport.user.username}]}),_.isUndefined(a.session.join)){var g=this.configs[d.provider];_.isArray(g)&&(g=g[d.index]),this.authmodel[g.db.method](f).then(function(c){if(_.isEmpty(c))throw"User not found for this credentials.";a.session.passport.user=c,b.redirect(a.session.ecrm.urlRedirectSuccess+"/success?"+qs.stringify({session:"s:"+signature.sign(a.sessionID,this.dataCommon.secretCookieKey)}))}.bind(this))["catch"](function(c){i(c,d.provider,a,b)})}else this.authmodel.joinAccount(a.session.join.id,utils.obj.underscoreKeys({authType:d.provider,socialProfile:a.session.passport.user})).then(function(){this.logger.info('[ yocto-auth.endPoint ] - Document Auth created for account : "',a.session.join.id,'" for provider : "',d.provider,'"'),delete a.session.join,b.redirect(a.session.ecrm.urlRedirectSuccess+"/join/success?value="+encode('{"provider":"'+d.provider+'"}'))}.bind(this))["catch"](function(c){this.logger.error('[ yocto-auth.endPoint ] - error cannot create auth document for this social network "',c),a.session.ecrm.urlRedirectFail+="/join/fail?value="+encode('{"provider":"'+d.provider+'"}'),delete a.session.join,i(c,d.provider,a,b)}.bind(this))}catch(h){i(h.details,h.provider,a,b)}var i=function(a,b,c,d){this.logger.error('[ yocto-auth.endPoint ] error authentication for provider "'+b+'", more details : ',a),d.redirect(c.session.ecrm.urlRedirectFail+"/fail?value="+encode('{"status":"error","code":"400101","message":"User not found for the given credentials"}'))}.bind(this)}.bind(this))},Auth.prototype.addTwitter=function(a){this.configs.twitter=a,passport.use(new TwitterStrategy({consumerKey:a.identifier,consumerSecret:a.secret,callbackURL:this.dataCommon.host+a.urls.callback},function(a,b,c,d){var e=utils.obj.underscoreKeys({providerId:c.id,displayName:c.displayName,profilePicture:_.isUndefined(_.first(c.photos))?"":_.first(c.photos).value,accessToken:a,secretToken:b});d(null,e)})),bindStrategy.apply(this,[a,"twitter"])},Auth.prototype.addStandard=function(a){this.configs.standard.push(a);var b=this.configs.standard.length-1;passport.use(new Strategy(function(a,b,c){c(null,{username:a,password:b})})),this.app.post(a.urls.connect,this.dataCommon.session,passport.authenticate("local",{failureRedirect:this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":true,"provider":"standard","index":'+b+"}")}),function(a,c){return a.session.passport.user.error?c.redirect(this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":true,"provider":"standard","index":'+b+"}")):(setUrlSession(a),void c.redirect(this.dataCommon.internalUrlRedirect+"?value="+encode('{"error":false,"provider":"standard","index":'+b+"}")))}.bind(this))},Auth.prototype.addFacebook=function(a){this.configs.facebook=a,passport.use(new FacebookStrategy({clientID:a.identifier,clientSecret:a.secret,callbackURL:this.dataCommon.host+a.urls.callback,profileFields:a.fields},function(a,b,c,d){var e=utils.obj.underscoreKeys({providerId:c.id,displayName:c.displayName,lastname:c.name.familyName,firstname:c.name.givenName,sex:c.gender,profilePicture:_.isUndefined(_.first(c.photos))?"":_.first(c.photos).value,accessToken:a});d(null,e)})),bindStrategy.apply(this,[a,"facebook"])},Auth.prototype.addGoogle=function(a){this.configs.google=a,passport.use(new GoogleStrategy({clientID:a.identifier,clientSecret:a.secret,callbackURL:this.dataCommon.host+a.urls.callback},function(a,b,c,d){var e=utils.obj.underscoreKeys({providerId:c.id,displayName:c.displayName,lastname:c.name.familyName,firstname:c.name.givenName,sex:c.gender,profilePicture:_.isUndefined(_.first(c.photos))?"":_.first(c.photos).value,accessToken:a});d(null,e)})),bindStrategy.apply(this,[a,"google"])},Auth.prototype.addActiveDirectory=function(a){this.configs.ad.push(a);var b=this.configs.ad.length-1;passport.use(new LdapStrategy({server:a.server,usernameField:"username",passwordField:"display_password"},function(a,b){b(null,a)})),this.app.post(a.urls.connect,this.dataCommon.session,function(a,c,d){setUrlSession(a),passport.authenticate("ldapauth",function(d,e){var f=JSON.stringify({error:!_.isNull(d),provider:"ad",index:b});a.session.passport={user:_.isNull(e)?{}:e},c.redirect(this.dataCommon.internalUrlRedirect+"?value="+encode(f))}.bind(this))(a,c,d)}.bind(this))},module.exports=function(a){return new Auth(a)};